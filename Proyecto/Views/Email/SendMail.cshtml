@model Proyecto.Models.EmailModel

<meta name="viewport" content="width=device-width" />
<script src="~/scripts/tinymce/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: '#message',
        images_upload_url: 'postAcceptor.php',
        automatic_uploads: false,
        height: 500,
        plugins: [
            "advlist autolink lists link image charmap print preview anchor",
            "searchreplace visualblocks code fullscreen",
            "insertdatetime media table paste preview imagetools wordcount"
        ],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | preview",
        content_css: '//www.tiny.cloud/css/codepen.min.css'

    });
    tinymce.activeEditor.execCommand('mcePreview');
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#"><i class="fa fa-home"></i></a></li>
            <li class="breadcrumb-item active">Email</li>
        </ol>
        <hr class="style-three">
        <div class="form-group">
            <div class="col-md-10">
                <label class="control-label col-md-2"></label> @ViewBag.Message
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.subject, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.message, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="send_msg" value="Send mail" class="btn btn-primary" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="reset" id="reset_btn" value="Reset" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}