@model Proyecto.Models.ProfileModel



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create Article</h4>
    <hr />
    <div class="form-group">
        <div class="col-md-10">
            <label class="control-label col-md-2"></label> @ViewBag.Message
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>*@



    <div class="form-group">
        @Html.LabelFor(model => model.selectedCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.selectedCategory, new SelectList(Model.CategoryList, "Value", "Text"), "--Please select a topic--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.selectedCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.selectedValue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.selectedValue, new SelectList(Model.ValuesList, "Value", "Text"), "--Please select a topic--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.selectedValue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        $("#selectedCategory").change(function () {
            var url = '@Url.Action("GetValuesCategory", "Profile")';
            var data = { id: $(this).val() };
            $.get(url, data,
                function (values) {


                    var ddlSelectedValue = $("#ValuesList");
                    ddlSelectedValue.empty()

                    //Clear all previous options
                    //$("#selectedValue > option").remove();



                    //populate products
                    for (i = 0; i < values.length; i++) {
                        ddlSelectedValue.append($("<option/>").val(values[i].Value).text(values[i].Text));
                        //$("<option/>").val(values[i].Value).html(values[i].Text).appendTo("#ValuesList");
                    }
                    //$('#selectedValue').append(option);

                    //$.each(values, function (index, game) {
                    //    ddlSelectedProduct.append(
                    //        $('<option/>', {
                    //            value: game.Value,
                    //            text: game.Text
                    //        })
                    // );
                });
        });
    });
</script>
